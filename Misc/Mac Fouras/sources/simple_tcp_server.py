import socket
import threading

HOST = '0.0.0.0'
PORT = 5000
FLAG = "MAC{CH4R4D3_M4ST3R_D3PUS_2003}"

WELCOME = """Figure mystique du fort du cyberspace, Mac Fouras a remplac√© ses √©nigmes par des charades techniques...
Connecte-toi √† son service et prouve que tu es digne du flag.

üóùÔ∏è Un seul mot d'ordre : pas d'erreur, sinon la connexion est rompue !
<user> """

CHARADES = [
    ('Mon premier supporte la t√™te. Au Cambodge, vous paierez vos achats avec mon second. "Courrier √©lectronique" est synonyme de mon tout.','Courriel'),
    ("Mon premier est l‚Äôacronyme de ‚ÄúHyperText Transfer Protocol‚Äù.\nMon second est le port standard pour les connexions chiffr√©es.\nMon tout est le protocole HTTP s√©curis√©.", "HTTPS"),
    ("Mon premier est contraire de vrai.\nNe pas abuser de mon second, eau-de-vie de canne √† sucre !\nVous pouvez √©changer vos id√©es sur mon tout, groupe de discussion sur Internet.", "Forum"),
    ('"Voir" au pass√© simple repr√©sente mon premier.\nMon second s‚Äô√©crit avec l‚Äôalphabet cyrillique.\nMon tout nuit aux logiciels non-malveillants.', "Virus"),
    ("Mon premier est carrossable.\nMon second a pour synonyme pr√™t-√†-monter.\nMon tout est un logiciel malveillant qui cr√©e une porte dans une machine et la maintient ouverte.", "Rootkit"),
]

def handle_client(conn, addr):
    print(f"[+] Connexion √©tablie depuis {addr}")
    try:
        conn.sendall(WELCOME.encode() + b"\n")

        for idx, (question, expected_answer) in enumerate(CHARADES, 1):
            prompt = f"\nCharade {idx} :\n{question}\nTa r√©ponse : "
            conn.sendall(prompt.encode())

            response = conn.recv(1024)
            if not response:
                break
            response = response.decode().strip()

            if response.lower() != expected_answer.lower():
                conn.sendall("Mauvaise r√©ponse. Connexion termin√©e.\n".encode())
                print(f"[-] Mauvaise r√©ponse de {addr} √† la charade {idx}")
                return
            
            conn.sendall("Bonne r√©ponse !\n".encode('utf-8'))

        conn.sendall(f"\nBravo ! Voici ton flag : {FLAG}\n".encode())

    except Exception as e:
        print(f"[!] Erreur avec {addr}: {e}")
    finally:
        conn.close()
        print(f"[*] Connexion ferm√©e pour {addr}")

def main():
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        s.bind((HOST, PORT))
        s.listen(5)
        print(f"[+] Serveur d√©marr√© sur {HOST}:{PORT}")
        while True:
            conn, addr = s.accept()
            client_thread = threading.Thread(target=handle_client, args=(conn, addr))
            client_thread.start()

if __name__ == "__main__":
    main()
